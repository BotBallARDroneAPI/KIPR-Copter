/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class ARDrone */

#ifndef _Included_ARDrone
#define _Included_ARDrone
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     ARDrone
 * Method:    connect
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_ARDrone_connect
  (JNIEnv *, jobject);

/*
 * Class:     ARDrone
 * Method:    disconnect
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_ARDrone_disconnect
  (JNIEnv *, jobject);

/*
 * Class:     ARDrone
 * Method:    takeoff
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_ARDrone_takeoff
  (JNIEnv *, jobject);

/*
 * Class:     ARDrone
 * Method:    land
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_ARDrone_land
  (JNIEnv *, jobject);

/*
 * Class:     ARDrone
 * Method:    emergency
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_ARDrone_emergency
  (JNIEnv *, jobject);

/*
 * Class:     ARDrone
 * Method:    get_battery
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_ARDrone_get_1battery
  (JNIEnv *, jobject);

/*
 * Class:     ARDrone
 * Method:    get_x
 * Signature: ()F
 */
JNIEXPORT jfloat JNICALL Java_ARDrone_get_1x
  (JNIEnv *, jobject);

/*
 * Class:     ARDrone
 * Method:    get_y
 * Signature: ()F
 */
JNIEXPORT jfloat JNICALL Java_ARDrone_get_1y
  (JNIEnv *, jobject);

/*
 * Class:     ARDrone
 * Method:    get_z
 * Signature: ()F
 */
JNIEXPORT jfloat JNICALL Java_ARDrone_get_1z
  (JNIEnv *, jobject);

/*
 * Class:     ARDrone
 * Method:    get_x_velocity
 * Signature: ()F
 */
JNIEXPORT jfloat JNICALL Java_ARDrone_get_1x_1velocity
  (JNIEnv *, jobject);

/*
 * Class:     ARDrone
 * Method:    get_y_velocity
 * Signature: ()F
 */
JNIEXPORT jfloat JNICALL Java_ARDrone_get_1y_1velocity
  (JNIEnv *, jobject);

/*
 * Class:     ARDrone
 * Method:    get_z_velocity
 * Signature: ()F
 */
JNIEXPORT jfloat JNICALL Java_ARDrone_get_1z_1velocity
  (JNIEnv *, jobject);

/*
 * Class:     ARDrone
 * Method:    get_yaw
 * Signature: ()F
 */
JNIEXPORT jfloat JNICALL Java_ARDrone_get_1yaw
  (JNIEnv *, jobject);

/*
 * Class:     ARDrone
 * Method:    front_camera
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_ARDrone_front_1camera
  (JNIEnv *, jobject);

/*
 * Class:     ARDrone
 * Method:    down_camera
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_ARDrone_down_1camera
  (JNIEnv *, jobject);

/*
 * Class:     ARDrone
 * Method:    enable_drone_vision
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_ARDrone_enable_1drone_1vision
  (JNIEnv *, jobject);

/*
 * Class:     ARDrone
 * Method:    disable_drone_vision
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_ARDrone_disable_1drone_1vision
  (JNIEnv *, jobject);

/*
 * Class:     ARDrone
 * Method:    write_external_camera_data
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_ARDrone_write_1external_1camera_1data
  (JNIEnv *, jobject);

/*
 * Class:     ARDrone
 * Method:    delete_external_camera_data
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_ARDrone_delete_1external_1camera_1data
  (JNIEnv *, jobject);

/*
 * Class:     ARDrone
 * Method:    set_Mac_Address
 * Signature: (Ljava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_ARDrone_set_1Mac_1Address
  (JNIEnv *, jobject, jstring);

/*
 * Class:     ARDrone
 * Method:    move
 * Signature: (FFFF)V
 */
JNIEXPORT void JNICALL Java_ARDrone_move
  (JNIEnv *, jobject, jfloat, jfloat, jfloat, jfloat);

/*
 * Class:     ARDrone
 * Method:    hover
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_ARDrone_hover
  (JNIEnv *, jobject);

/*
 * Class:     ARDrone
 * Method:    hover_on_roundel
 * Signature: (Z)V
 */
JNIEXPORT void JNICALL Java_ARDrone_hover_1on_1roundel
  (JNIEnv *, jobject, jboolean);

/*
 * Class:     ARDrone
 * Method:    set_detection
 * Signature: (I)V
 */
JNIEXPORT void JNICALL Java_ARDrone_set_1detection
  (JNIEnv *, jobject, jint);

#ifdef __cplusplus
}
#endif
#endif
